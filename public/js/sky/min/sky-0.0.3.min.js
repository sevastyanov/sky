if(!Function.prototype.bind) {
  Function.prototype.bind = function(oThis) {
    if(typeof this !== "function") {
      throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
    }
    var aArgs = Array.prototype.slice.call(arguments, 1), fToBind = this, fNOP = function() {
    }, fBound = function() {
      return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)))
    };
    fNOP.prototype = this.prototype;
    fBound.prototype = new fNOP;
    return fBound
  }
}
;(function(global) {
  global.sky = global.sky || {};
  global.sky.dict = global.sky.dict || {};
  var translate = sky.dict.translate || {};
  global.Sky = {build:1, global:global, isDebug:sky.isDebug, skyRoot:sky.basePath, emptyFn:function() {
  }, define:function(className, prototype) {
    sky.ClassManager.define(className, prototype)
  }, create:function(className, cfg) {
    return sky.ClassManager.create(className, cfg)
  }, _:function(name) {
    var result = translate[name];
    return typeof result === "string" ? result : name
  }, namespace:function(namespace) {
    var ns = namespace.split("."), child = this.global;
    for(var j = 0, ln = ns.length;j < ln;j++) {
      var nsPart = ns[j];
      child = child[nsPart] = child[nsPart] || {}
    }
  }, isObject:function(obj) {
    return typeof obj === "object" && obj !== null
  }}
})(window);
({_classXtypes:{}, _classDefined:{}, loadCachedFile:function(fileName) {
  var url = fileName + (Sky.isDebug ? "?_date=" + new Date : "?_version=" + Sky.build), result = $.ajax({async:false, url:url});
  return result.responseText
}, injectScript:function(fileName) {
  var classTxt = this.loadCachedFile(fileName);
  if(classTxt) {
    (new Function(classTxt + "\n//@ sourceURL=" + fileName))()
  }
}, injectScripts:function() {
  for(var i = 0, ln = arguments.length;i < ln;i++) {
    this.injectScript(arguments[i])
  }
}, define:function(className, prototype) {
  if(!prototype) {
    prototype = {}
  }
  var simpleClsName = className.replace(/\./g, "_"), subc, superc;
  if(prototype.hasOwnProperty("constructor")) {
    subc = prototype.constructor;
    delete prototype.constructor
  }else {
    subc = function() {
      return this.callParent(arguments)
    }
  }
  superc = prototype.extend ? this.require(prototype.extend) : this.require("sky.Class");
  delete prototype.extend;
  var F = function() {
  };
  F.prototype = superc.prototype;
  subc.prototype = new F;
  subc.prototype.constructor = subc;
  subc.prototype.name = className;
  subc.prototype.className = className;
  subc.superclass = superc.prototype;
  subc.displayName = className;
  subc.$super\u0421lass = superc;
  if("config" in subc.prototype) {
    var cfg = subc.prototype.config;
    var newCfg = {};
    for(var i in cfg) {
      if(!prototype.config || prototype.config && !(i in prototype.config)) {
        newCfg[i] = cfg[i]
      }
    }
    subc.prototype.config = newCfg
  }else {
    subc.prototype.config = {}
  }
  if("config" in prototype) {
    for(var i in prototype.config) {
      if(prototype.config.hasOwnProperty(i)) {
        subc.prototype.config[i] = prototype.config[i]
      }
    }
    delete prototype.config
  }
  var classAlias = prototype.alias;
  delete prototype.alias;
  var classRequires = prototype.requires;
  delete prototype.requires;
  for(var i in prototype) {
    if(prototype.hasOwnProperty(i)) {
      subc.prototype[i] = prototype[i];
      if(prototype[i] instanceof Function) {
        subc.prototype[i].$owner = subc;
        subc.prototype[i].$name = i;
        subc.prototype[i].displayName = subc + "." + i + "()"
      }
    }
  }
  subc.$owner = subc;
  subc.$name = "constructor";
  if(prototype.singleton) {
    subc = new subc
  }
  this.classAlias(className, subc);
  if(classAlias) {
    this.classAlias(classAlias, subc)
  }
  if(classRequires) {
    var newClsRequired = false;
    for(var i = 0, ln = classRequires.length;i < ln;i++) {
      if(!this._classDefined[classRequires[i]]) {
        if(!newClsRequired) {
          console.group(className + " require:");
          newClsRequired = true
        }
        this.require(classRequires[i])
      }
    }
    if(newClsRequired) {
      console.groupEnd(className + " require:")
    }
  }
}, classAlias:function(className, classFunction) {
  var ns = className.split("."), child = Sky.global;
  for(var j = 0, ln = ns.length - 1;j < ln;j++) {
    var nsPart = ns[j];
    child[nsPart] = child[nsPart] || {};
    child = child[nsPart]
  }
  child[ns[j]] = classFunction;
  this._classDefined[className] = classFunction
}, create:function(className, cfg) {
  var cls = this.require(className);
  return new cls(cfg)
}, requires:function() {
  for(var i in arguments) {
    if(arguments.hasOwnProperty(i)) {
      this.require(arguments[i])
    }
  }
}, require:function(className) {
  if(!(className in this._classDefined)) {
    var fileName = Sky.skyRoot + "src/" + className.replace(/\./g, "/") + ".js";
    this.injectScript(fileName);
    if(!(className in this._classDefined)) {
      throw new Error(className + " \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d");
    }
    console.warn("[\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435!] \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u043f\u043e\u0434\u0433\u0440\u0443\u0437\u043a\u0430 \u043a\u043b\u0430\u0441\u0441\u0430: " + className)
  }
  return this._classDefined[className]
}, init:function() {
  this.classAlias("sky.ClassManager", this);
  delete this.init
}}).init();
sky.ClassManager.classAlias("sky.Class", function(cfg) {
  this.__initConfig(cfg);
  if(cfg && cfg.override && typeof cfg.override === "object") {
    this.__initOverride(cfg.override)
  }
  return this.__construct()
});
sky.Class.prototype.callOverriden = function(args) {
  var method = args.callee, overridenMethod = method.$overriden, overridenScope = method.$overridenScope;
  if(overridenMethod) {
    return overridenMethod.apply(overridenScope, args || [])
  }else {
    throw new Error("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434");
  }
};
sky.Class.prototype.callParent = function(args) {
  var method = args.callee, parentMethod = method.$owner.superclass[method.$name];
  if(parentMethod && parentMethod instanceof Function) {
    return parentMethod.apply(this, args || [])
  }
};
sky.Class.prototype.__construct = function() {
};
sky.Class.prototype.__destruct = function() {
  for(var i in this) {
    if(this.hasOwnProperty(i)) {
      delete this[i]
    }
  }
  this.destroyed = true
};
sky.Class.prototype.destroy = function() {
  this.__destruct()
};
sky.Class.prototype.__initOverride = function(override) {
  var scope = override["scope"] || this;
  for(var i in override) {
    if(!override.hasOwnProperty(i) || i === "scope") {
      continue
    }
    override[i].$overriden = this[i];
    override[i].$overridenScope = this;
    (function(i) {
      this[i] = function() {
        override[i].apply(scope, arguments)
      }
    }).call(this, i)
  }
};
sky.Class.prototype.__initConfig = function(cfg) {
  cfg = cfg || {};
  var defaultCfg = this.config;
  for(var i in defaultCfg) {
    if(!cfg.hasOwnProperty(i) && defaultCfg.hasOwnProperty(i)) {
      cfg[i] = defaultCfg[i]
    }
  }
  for(var i in cfg) {
    if(cfg.hasOwnProperty(i)) {
      this[i] = cfg[i]
    }
  }
};
Sky.define("sky.DOM", {});
(function() {
  var maxZIndex = 1E4;
  sky.DOM.getMaxZIndex = function() {
    return maxZIndex++
  }
})();
(function() {
  Sky.define("sky.PopupManager", {});
  var popupElements = [];
  sky.PopupManager.show = function(el, callback, context, hideOtherIfExists) {
    if(hideOtherIfExists) {
      this.hideAll()
    }
    $(el).bind("click", this.onElClick);
    popupElements.push({el:el, fn:typeof callback === "function" ? callback : Sky.emptyFn, context:context || el});
    document.body.appendChild(el);
    $(el).css({zIndex:sky.DOM.getMaxZIndex() + 1, position:"absolute", visibility:"visible"})
  };
  sky.PopupManager.hide = function(el) {
    $(el).unbind("click", this.onElClick);
    for(var len = popupElements.length, i = len - 1;i >= 0;i--) {
      var popupElement = popupElements[i];
      if(popupElement.el === el) {
        popupElement.fn.call(popupElement.context);
        popupElements.splice(i, 1);
        if(el.parentNode) {
          el.parentNode.removeChild(el)
        }
        return
      }
    }
  };
  sky.PopupManager.hideAll = function() {
    while(popupElements.length) {
      this.hide(popupElements[0].el)
    }
  };
  sky.PopupManager.onElClick = function(e) {
    e.stopPropagation()
  };
  sky.PopupManager.onBodyClick = function(e) {
    this.hideAll()
  };
  $(document).on("click", sky.PopupManager.onBodyClick.bind(sky.PopupManager))
})();
Sky.define("sky.module.user.Auth", {config:{containerId:null, fb:null}, __construct:function(cfg) {
  this.$el = $("#" + this.containerId);
  this.$linkFb = $("#" + this.containerId + "-fb");
  this.$linkFb.on("click", this.onClick_fb.bind(this))
}, onClick_fb:function(e) {
  e.preventDefault();
  var url = "https://www.facebook.com/dialog/oauth" + "?client_id=" + this.fb.client_id + "&redirect_uri=" + encodeURIComponent(this.fb.redirect_uri);
  var $fbIframe = $('<iframe src="' + url + '"></iframe>');
  $fbIframe.css({width:"500px", height:"350px"});
  $dialog = $("<div></div>");
  $dialog.append($fbIframe);
  $dialog.dialog({title:Sky._("\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 Facebook"), autoOpen:true, resizable:false, height:430, width:530, modal:true});
  this.$dialog = $dialog;
  $(window).on("fb_auth_success", this.onOAuth_success.bind(this))
}, onOAuth_success:function() {
  this.$dialog.dialog("close");
  window.location = window.location
}});

